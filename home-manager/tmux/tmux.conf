#----------#
# Bindings #
#----------#

# Reload config
bind-key r source-file ~/.config/tmux/tmux.conf

# Swap % with c and " with g
unbind g
bind-key g split-window -h
unbind c
bind-key c split-window -v
unbind %
bind-key % new-window
unbind '"'
bind-key '"' command-prompt

# Easier pane switching with Ctrl - home row keys
unbind n
bind n select-pane -L
unbind e
bind e select-pane -U
unbind i
bind i select-pane -D
unbind o
bind o select-pane -R

# Resize pane with Ctrl - home row keys
unbind C-n
unbind C-e
unbind C-i
unbind C-o
bind -r C-n resize-pane -L 3
bind -r C-e resize-pane -U 3
bind -r C-i resize-pane -D 3
bind -r C-o resize-pane -R 3

unbind w
bind w run-shell "tmw >/dev/null || true"

unbind s
bind s popup -E

bind G popup -h 90% -w 90% -E lazygit
bind O popup -h 90% -w 90% -E nvim ~/org/fast.org

bind -n C-f run-shell "sh -c 'tmux resize-pane -Z && tmux display-message -p #W | grep -q nvim && tmux send-keys C-w =' || true"

#----------------------------#
# Nvim integration for panes #
#----------------------------#

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|n?vim?x?)(-wrapped)?(diff)?$'"

bind-key -n 'M-n' if-shell "$is_vim" 'send-keys M-n' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-e' if-shell "$is_vim" 'send-keys M-e' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-i' if-shell "$is_vim" 'send-keys M-i' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-o' if-shell "$is_vim" 'send-keys M-o' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-n' select-pane -L
bind-key -T copy-mode-vi 'M-e' select-pane -U
bind-key -T copy-mode-vi 'M-i' select-pane -D
bind-key -T copy-mode-vi 'M-o' select-pane -R

bind -n 'M-C-n' if-shell "$is_vim" 'send-keys M-C-n' 'resize-pane -L 1'
bind -n 'M-C-e' if-shell "$is_vim" 'send-keys M-C-e' 'resize-pane -U 1'
bind -n 'M-C-i' if-shell "$is_vim" 'send-keys M-C-i' 'resize-pane -D 1'
bind -n 'M-C-o' if-shell "$is_vim" 'send-keys M-C-o' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-n resize-pane -L 1
bind-key -T copy-mode-vi M-e resize-pane -U 1
bind-key -T copy-mode-vi M-i resize-pane -D 1
bind-key -T copy-mode-vi M-o resize-pane -R 1

bind -n 'S-M-n' if-shell "$is_vim" 'send-keys S-M-n' 'swap-pane -s "{left-of}"'
bind -n 'S-M-i' if-shell "$is_vim" 'send-keys S-M-i' 'swap-pane -s "{down-of}"'
bind -n 'S-M-e' if-shell "$is_vim" 'send-keys S-M-e' 'swap-pane -s "{up-of}"'
bind -n 'S-M-o' if-shell "$is_vim" 'send-keys S-M-o' 'swap-pane -s "{right-of}"'

bind-key -T copy-mode-vi S-M-n swap-pane -s "{left-of}"
bind-key -T copy-mode-vi S-M-i swap-pane -s "{down-of}"
bind-key -T copy-mode-vi S-M-e swap-pane -s "{up-of}"
bind-key -T copy-mode-vi S-M-o swap-pane -s "{right-of}"

#---------#
# Options #
#---------#

# Delete the session when the last window is closed
# set -g detach-on-destroy on

# Longer history
set -g history-limit 20000

set -g status-interval 1

set -g default-terminal "screen-256color"
set -g terminal-overrides ",xterm*:Tc"

set -g pane-border-style 'fg=colour7'
set -g pane-active-border-style 'fg=colour3'

# Mouse mode
set -g mouse on

# See https://unix.stackexchange.com/questions/608142/whats-the-effect-of-escape-time-in-tmux
# for this option, I'm not sure about how to explain it but nvim recommends it
set -g escape-time 10

# Another option recommended by nvim:
# > WARNING focus-events is not enabled. 'autoread' may not work.
set -g focus-events on

# Pass the window title to the terminal.
set-option -g set-titles on

#------------#
# Status bar #
#------------#

# Basic options
set -g status-justify absolute-centre
set -g status-bg colour0
set -g status-fg colour5
set -g status-left-length 70
set -g status-right-length 70
set -g status-position top # because vim is on the bottom

set -g status-left "#{@sis}#{T:@status-left-outer}#{@sos}#{T:@status-left-inner}#{@ses}"
set -g status-right "#{@sos}#{T:@status-right-inner}#{@sis}#{T:@status-right-outer}#{@ses}"

# Colors
set -g @sos "#[bg=#504945, fg=#ebdbb2, nobold]"
set -g @sis "#[bg=#a89984, fg=#282828, bold]"
set -g @ses ""

# Content
set -g @status-left-outer ' #{session_name} '
set -g @status-left-inner '#{?window_zoomed_flag,#[fg=colour0#,bg=colour3#,bold] ZOOMED, NORMAL} '

set -g @status-right-inner ' %H:%M '
set -g @status-right-outer ' #{user}@#{host_short} '

# Window title format
set -g set-titles-string "#{pane_title} "
set -g window-status-format "#[fg=colour0,bg=colour7] #I:#W "
set -g window-status-current-format "#[fg=colour0,bg=colour3] #I:#W "

